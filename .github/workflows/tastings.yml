name: Tastings CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: asdf setup
        uses: asdf-vm/actions/setup@v1
      - name: asdf all the things
        run: |
          asdf plugin-add erlang https://github.com/michallepicki/asdf-erlang-prebuilt-ubuntu-20.04.git
          asdf plugin-add gleam
          asdf plugin-add elixir
          asdf install
      - name: install mix_gleam
        run: |
          git clone https://github.com/gleam-lang/mix_gleam.git
          cd mix_gleam
          MIX_ENV=prod mix do local.hex --force, local.rebar -force, archive.build, archive.install --force
      - run: mix deps.get
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Format Gleam
        run: gleam format --check src test
      - run: mix compile
      - name: Gleam tests
        run: mix gleam.test
      - name: Elixir tests
        run: mix test
  # deploy:
  #   needs: build # Will only run if the test job succeeds
  #   if: github.ref == 'refs/heads/main' # Only run this job if it is on the main branch
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: main # Check out main instead of the latest commit
  #         fetch-depth: 0 # Checkout the whole branch
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8.1
  #     - uses: mhanberg/gigalixir-action@v0.6.1
  #       with:
  #         GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
  #         GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         GIGALIXIR_APP: tastings # Feel free to also put this in your secrets
  #         MIGRATIONS: false # defaults to true
